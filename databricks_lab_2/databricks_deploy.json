{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String",
            "defaultValue": ""
        },
        "environment": {
            "type": "string",
            "defaultValue": "",
            "allowedValues": [
                "prod",
                "dev",
                "sandbox"
            ]
        },
        "databricksHubVnetName": {
            "type": "string",
            "defaultValue": ""
        },
        "databricksHubSubnetName": {
            "type": "string",
            "defaultValue": ""
        },
        "databricksSandboxAddressPrefix": {
            "type": "string",
            "defaultValue": ""
        },
        "databricksSubnetAddress": {
            "type": "string",
            "defaultValue": ""
        },
        "databricksGatewaySubnetAddress": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "functions": [],
    "variables": {
        "tags": {
            "Department": "it",
            "Team": "networking",
            "Environment": "sandbox",
            "Application": "databricks"
        },
        "databricksSubnetName": "[concat(parameters('databricksHubSubnetName'),'-',parameters('environment'))]",
        "hubNetworkSecurityGroupName": "[concat(parameters('databricksHubSubnetName'),'-',parameters('environment'),'-nsg')]",
        "gwPipName": "[concat(parameters('databricksHubSubnetName'),'-pip')]",
        "hubVmPipName": "[concat(parameters('databricksHubSubnetName'),'-vm-pip')]"
    },
    "resources": [
        // create databricks-sandbox-vnet
        {

            "name": "[parameters('databricksHubVnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "tags": "[variables('tags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('databricksSandboxAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('databricksSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('databricksSubnetAddress')]"/* ,
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('clientNetworkSecurityGroupName'))]"
                            } */
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": { "addressPrefix": "[parameters('databricksGatewaySubnetAddress')]" }
                    }
                ]
            }
        },
        // create the PIP for the VNG
        {
            "name": "[variables('gwPipName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "condition": true,
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4"
            },
            "sku": { "name": "Basic" }
        },
        // create the PIP for the VM
        {
            "name": "[variables('hubVmPipName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "condition": true,
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4"
            },
            "sku": { "name": "Basic" }
        }
    ],
    "outputs": {

    }
}