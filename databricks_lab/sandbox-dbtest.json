{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String",
            "defaultValue": "westus2"
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "sandbox-dbtest"
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "aw2ldbtest"
        },
        "storageAccountPrefix": {
            "type": "string"
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "allowedValues": [
                "Standard_B1s",
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_DS1_v2",
                "Standard_DS2_v3"
            ]
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "Standard_LRS"
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "linuxadmin"
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": ""
        }/* ,
        "dbtestGatewayIP": {
            "type": "string",
            "defaultValue": "40.64.86.218"
        } */,
        "createVNG": {
            "type": "bool",
            "defaultValue": false
        },
        "createStorageAccount": {
            "type": "bool",
            "defaultValue": false
        }
    },
    "functions": [],
    "variables": {
        "tags": {
            "Department": "it",
            "Team": "networking",
            "Environment": "sandbox",
            "Application": "databricks"
        },
        "vnetName": "[concat('sfc-',parameters('subnetName'),'-vnet')]",
        "pipName": "[concat(parameters('subnetName'),'-pip')]",
        "vngName": "[concat(parameters('subnetName'),'-vng')]",
        "networkInterfaceName": "[concat(parameters('subnetName'),'-nic')]",
        "vmPipName": "[concat(parameters('subnetName'),'-1-pip')]",
        "networkSecurityGroupName": "[concat(parameters('subnetName'),'-nsg')]",
        "storageAccountName": "[concat('sfc',parameters('storageAccountPrefix'),uniqueString(resourceGroup().id),'sa')]"/* ,
        "localNetworkGatewayName": "[concat(parameters('subnetName'),'-lng')]" */
    },
    "resources": [
        // create the vnet
        {
            "name": "[variables('vnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "condition": true,
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "tags": "[variables('tags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.10.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "10.10.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('networkSecurityGroupName'))]"
                            }
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": { "addressPrefix": "10.10.0.0/24" }
                    }
                ]
            }
        },
        // create the PIP for the VNG
        {
            "name": "[variables('pipName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "condition": "[parameters('createVNG')]",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            },
            "sku": { "name": "Standard" },
            "zones": [
                "1",
                "2",
                "3"
            ]
        },
        // create the PIP for the VM
        {
            "name": "[variables('vmPipName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "condition": true,
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "sku": { "name": "Basic" },
            "zones": [ "1" ]
        },
        // create the VNG
        {
            "name": "[variables('vngName')]",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2020-11-01",
            "condition": "[parameters('createVNG')]",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "vnetGatewayConfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'GatewaySubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                            }
                        }
                    }
                ],
                "sku": {
                    "name": "VpnGw1AZ",
                    "tier": "VpnGw1AZ"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "enablePrivateIpAddress": true
            }
        },
        //    network interface
        {
            "condition": true,
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmPipName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetName'),parameters('subnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmPipName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            //      network security group
            "condition": true,
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowSSHInBound",
                        "properties": {
                            "description": "AllowSSHInBound",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [
                                "72.208.101.143",
                                "63.156.58.20",
                                "4.1.98.242"
                            ],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        // create the storage account
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "condition": "[parameters('createStorageAccount')]",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            //  virtual machine
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "condition": true,
            "location": "[parameters('location')]",
            "zones": [ "1" ],
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
                "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountName'))]"
            ],
            "tags": "[variables('tags')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Oracle",
                        "offer": "Oracle-Linux",
                        "sku": "ol86-lvm-gen2",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "patchSettings": {
                            "patchMode": "ImageDefault"
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net/')]"
                    }
                }
            }
        },
        /* {
            // local network gateway
            "type": "Microsoft.Network/localNetworkGateways",
            "apiVersion": "2019-02-01",
            "name": "[variables('localNetworkGatewayName')]",
            //"condition": "[parameters('createVNG')]",
            "condition": false,
            "location": "[parameters('location')]",
            "dependsOn": [ "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vngName'))]" ],
            "tags": "[variables('tags')]",
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "192.168.0.0/24"
                    ]
                },
                "gatewayIpAddress": "[parameters('dbtestGatewayIP')]"
            }
        }, */
        {
            // connection
            "type": "Microsoft.Network/connections",
            "apiVersion": "2020-11-01",
            "name": "dbtest-to-dbclient",
            "location": "[parameters('location')]",
            "condition": "[parameters('createVNG')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vngName'))]"
            ],
            "tags": "[variables('tags')]",
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vngName'))]"
                },
                "virtualNetworkGateway2": {
                    "id": "/subscriptions/17df786b-c9ea-4f50-9cb0-57b80e526f55/resourceGroups/databricks-client-rg/providers/Microsoft.Network/virtualNetworkGateways/databricks-client-vng"
                },
                "connectionType": "Vnet2Vnet",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "sharedKey": "summer2022",
                "enableBgp": false,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": [],
                "dpdTimeoutSeconds": 45,
                "connectionMode": "Default"
            }
        }
    ],
    "outputs": {
        "username": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Compute/virtualMachines',parameters('virtualMachineName'))).osProfile.adminUsername]"
        }
    }
}