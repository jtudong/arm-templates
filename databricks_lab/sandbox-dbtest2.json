{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String",
            "defaultValue": "westus2"
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "sandbox-dbtest"
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "aw2ldbtest"
        },
        "storageAccountPrefix": {
            "type": "string",
            "defaultValue": "dbrick"
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "allowedValues": [
                "Standard_B1s",
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_DS1_v2",
                "Standard_DS2_v3"
            ]
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "Standard_LRS"
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "sfcadmin"
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": ""
        }
    },
    "functions": [],
    "variables": {
        "tags": {
            "Department": "it",
            "Team": "networking",
            "Environment": "sandbox",
            "Application": "databricks"
        },
        "networkInterfaceName": "[concat(parameters('subnetName'),'-nic')]",
        "vmPipName": "[concat(parameters('subnetName'),'-pip')]",
        "storageAccountName": "[concat('sfc',parameters('storageAccountPrefix'),uniqueString(resourceGroup().id),'sa')]"
    },
    "resources": [
        // create the PIP for the VM
        {
            "name": "[variables('vmPipName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "sku": { "name": "Basic" },
            "zones": [ "1" ]
        },
        //    network interface
        {
            "condition": true,
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmPipName'))]"//,
                //"[resourceId('17df786b-c9ea-4f50-9cb0-57b80e526f55','sfc-dbtest-sandbox-rg','Microsoft.Network/virtualNetworks','sfc-sandbox-dbtest-vnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('17df786b-c9ea-4f50-9cb0-57b80e526f55','sfc-dbtest-sandbox-rg','Microsoft.Network/virtualNetworks/subnets','sfc-sandbox-dbtest-vnet','sandbox-dbtest')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmPipName'))]"
                            }
                        }
                    }
                ]
            }
        },
        // create the storage account
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "condition": true,
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            //  virtual machine
            "condition": true,
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "location": "[parameters('location')]",
            "zones": [ "1" ],
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
                "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountName'))]"
            ],
            "tags": "[variables('tags')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Oracle",
                        "offer": "Oracle-Linux",
                        "sku": "ol86-lvm-gen2",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "patchSettings": {
                            "patchMode": "ImageDefault"
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net/')]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}